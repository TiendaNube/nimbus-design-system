name: "Publish Release"

on:
  push:
    branches:
      - master
      - "!dependabot/**/**"
    paths-ignore:
      - "**/package.json"
      - ".yarn/versions/**"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version
        id: node_version
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
      - uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.node_version.outputs.NVMRC }}"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn

      - name: Publish packages
        run: |
          export NODE_OPTIONS="--max_old_space_size=8192"
          yarn publish:stable
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_FROM_JUNIOR_CONQUISTA }}

      - name: Branch protection OFF
        run: |
          curl --request PUT \
          --url 'https://api.github.com/repos/tiendanube/nimbus-design-system/branches/master/protection' \
          --header 'Authorization: token ${{ secrets.PAT_CHANGE_BRANCH_PROTECTION_RULES_FROM_JUNIOR_CONQUISTA }}' \
          --data '{"enforce_admins":false,"required_pull_request_reviews":null,"required_status_checks":null,"required_conversation_resolution":false,"restrictions":null,"required_linear_history":false}'

      - name: Commit release
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "feat: publish release"

      - name: Branch protection ON
        run: |
          curl --request PUT \
          --url 'https://api.github.com/repos/tiendanube/nimbus-design-system/branches/master/protection' \
          --header 'Authorization: token ${{ secrets.PAT_CHANGE_BRANCH_PROTECTION_RULES_FROM_JUNIOR_CONQUISTA }}' \
          --header 'Accept: application/vnd.github.luke-cage-preview+json' \
          --data '{"enforce_admins":true,"required_pull_request_reviews":{"dismiss_stale_reviews":true,"require_code_owner_reviews":true,"required_approving_review_count":2},"required_conversation_resolution":true,"required_status_checks":null,"restrictions":null,"required_linear_history":true}'

      - name: Generate tag release
        uses: StephaneBour/actions-calver@master
        id: calver
        with:
          date_format: "%Y.%m.%d"
          release: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.calver.outputs.release }}
      
      - name: Get current PR
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.calver.outputs.release }}
          release_name: ${{ steps.calver.outputs.release }}
          body: ${{ steps.PR.outputs.pr_body }}
          discussion_category_name: "announcements"
          draft: false
          prerelease: false
          
      # - name: Send Slack Notification
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     payload-file-path: "./payload-slack-content.json"
      #   env:
      #    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}