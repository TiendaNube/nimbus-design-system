name: "publish-release"

on:
  push:
    branches:
      - master
      - "!dependabot/**/**"
    paths-ignore:
      - "**/package.json"
      - ".yarn/versions/**"

jobs:
  # publish-packages-npm:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 18
  #   env:
  #     TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set Node version
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: ".nvmrc"
  #         cache: "yarn"

  #     - name: Cache NPM dependencies
  #       uses: actions/cache@v3
  #       id: cache-dependencies
  #       with:
  #         path: |
  #           **/node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install dependencies
  #       if: steps.cache-dependencies.outputs.cache-hit != 'true'
  #       run: yarn

  #     - name: Publish packages
  #       run: |
  #         export NODE_OPTIONS="--max_old_space_size=8192"
  #         yarn publish:stable
  #       env:
  #         YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_FROM_JUNIOR_CONQUISTA }}

  #     - name: Branch protection OFF
  #       run: |
  #         curl --request PUT \
  #         --url 'https://api.github.com/repos/tiendanube/nimbus-design-system/branches/master/protection' \
  #         --header 'Authorization: token ${{ secrets.PAT_CHANGE_BRANCH_PROTECTION_RULES_FROM_JUNIOR_CONQUISTA }}' \
  #         --data '{"enforce_admins":false,"required_pull_request_reviews":null,"required_status_checks":null,"required_conversation_resolution":false,"restrictions":null,"required_linear_history":false}'

  #     - name: Commit release
  #       uses: stefanzweifel/git-auto-commit-action@v4
  #       with:
  #         commit_message: "feat: publish release"

  #     - name: Branch protection ON
  #       run: |
  #         curl --request PUT \
  #         --url 'https://api.github.com/repos/tiendanube/nimbus-design-system/branches/master/protection' \
  #         --header 'Authorization: token ${{ secrets.PAT_CHANGE_BRANCH_PROTECTION_RULES_FROM_JUNIOR_CONQUISTA }}' \
  #         --header 'Accept: application/vnd.github.luke-cage-preview+json' \
  #         --data '{"enforce_admins":true,"required_pull_request_reviews":{"dismiss_stale_reviews":true,"require_code_owner_reviews":true,"required_approving_review_count":1},"required_conversation_resolution":true,"required_status_checks":null,"restrictions":null,"required_linear_history":true}'

  create-github-relase:
    runs-on: ubuntu-latest
    # needs: publish-packages-npm
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Generate tag release
        uses: StephaneBour/actions-calver@v1.5
        id: calver
        with:
          date_format: "%Y.%m.%d"
          release: ${{ github.event_name == 'merge' && github.ref == 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.calver.outputs.release }}

      - name: Get current PR
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.calver.outputs.release }}
          name: ${{ steps.calver.outputs.release }}
          body: ${{ steps.PR.outputs.pr_body }}
          discussionCategory: "announcements"
          draft: false
          prerelease: false

  send-slack-notifications:
    # needs: [publish-packages-npm, create-github-relase]
    needs: [create-github-relase]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Send slack notification on chanel Ninbus updates
        id: slack-nimbus-updates
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload-file-path: ./.github/resources/payload-notification.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_NIMBUS_UPDATES }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Send slack notification on chanel Ninbus deploying
        id: slack-deploying
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload-file-path: ./.github/resources/payload-notification.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_DEPLOYING }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Send slack notification on chanel Tech product updates
        id: slack-tech-product-updates
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload-file-path: ./.github/resources/payload-notification.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TECH_PRODUCT_UPDATES }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
