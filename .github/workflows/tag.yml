name: "Create Release"

on:
  push:
    branches:
      - ECNIM-642

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set node version
        id: node_version
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
      - uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.node_version.outputs.NVMRC }}"
          registry-url: "https://registry.npmjs.org"

      - name: Generate tag release
        uses: StephaneBour/actions-calver@master
        id: calver
        with:
          date_format: "%Y.%m.%d"
          release: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.calver.outputs.release }}
      
      - name: Get current PR
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.calver.outputs.release }}
          release_name: ${{ steps.calver.outputs.release }}
          body: ${{ steps.PR.outputs.pr_body }}
          discussion_category_name: "announcements"
          draft: false
          prerelease: false
          
      - name: Send Slack Notification
        run: |
          curl --request PUT \
          --url 'https://hooks.slack.com/services/${{ secrets.SLACK_BOT }}/${{ secrets.SLACK_CHANEL }}/${{ secrets.SLACK_TOKEN }}' \
          --header 'Content-type: application/json'
          --data-raw '{ "blocks": [{"type": "header", "text": { "type": "plain_text", "text": "${{ github.actor }} published new versions of Nimbus components ðŸš€", "emoji": true }}, { "type": "section", "text": { "type": "mrkdwn", "text": "The release of these updates can be found in the <https://github.com/TiendaNube/nimbus-design-system/discussions/95|repository> and also on our official website." }}, { "type": "section", "text": { "type": "mrkdwn", "text": "Release Notes" }, "accessory": { "type": "button", "text": { "type": "plain_text", "text": "Go", "emoji": true }, "url": "https://nimbus.nuvemshop.com.br/documentation/overview/releases", "action_id": "button-action" } }, { "type": "section", "text": { "type": "mrkdwn", "text": "Storybook documentation" }, "accessory": { "type": "button", "text": { "type": "plain_text", "text": "Go", "emoji": true }, "url": "https://tiendanube.github.io/nimbus-design-system", "action_id": "button-action" }}, { "type": "divider" }]}'
