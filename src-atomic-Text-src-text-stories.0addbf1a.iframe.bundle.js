"use strict";(self.webpackChunknimbus_design_system=self.webpackChunknimbus_design_system||[]).push([[884],{"./packages/react/src/atomic/Text/src/text.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,aiGenerative:()=>aiGenerative,basic:()=>basic,danger:()=>danger,default:()=>__WEBPACK_DEFAULT_EXPORT__,lineClamp:()=>lineClamp,neutral:()=>neutral,p:()=>p,primary:()=>primary,responsive:()=>responsive,span:()=>span,success:()=>success,textDecoration:()=>textDecoration,warning:()=>warning});var _nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/core/styles/src/packages/atomic/text/index.ts"),_storybook_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./.storybook/utils.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Atomic/Text",component:__webpack_require__("./packages/react/src/atomic/Text/src/Text.tsx").E,argTypes:{children:{control:{type:"text"}},...(0,_storybook_utils__WEBPACK_IMPORTED_MODULE_0__.L2)(_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_2__.Q.properties)},tags:["autodocs"]},basic={args:{children:"Lorem ipsum dolor sit amet"}},p={args:{as:"p",children:"Lorem ipsum dolor sit amet"}},span={args:{as:"span",children:"Lorem ipsum dolor sit amet"}},primary={args:{color:"primary-textLow",children:"Lorem ipsum dolor sit amet"}},success={args:{color:"success-textLow",children:"Lorem ipsum dolor sit amet"}},warning={args:{color:"warning-textLow",children:"Lorem ipsum dolor sit amet"}},danger={args:{color:"danger-textLow",children:"Lorem ipsum dolor sit amet"}},neutral={args:{color:"neutral-textLow",children:"Lorem ipsum dolor sit amet"}},responsive={args:{children:"Lorem ipsum dolor sit amet",textAlign:{xs:"center",md:"center",lg:"right",xl:"center"}}},lineClamp={args:{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus et nisi sit amet quam convallis consectetur. Vestibulum hendrerit ac urna eget rhoncus. Aliquam non velit finibus sem gravida pretium. In neque metus, interdum a quam id, pulvinar consequat leo. Proin sapien mauris, efficitur ut mi at, finibus commodo metus. Pellentesque ac pellentesque risus. Nulla facilisi.",textAlign:"left",lineClamp:1}},textDecoration={args:{children:"Lorem ipsum dolor sit amet",textDecoration:"line-through"}},aiGenerative={args:{color:"ai-generative",children:"AI Generated Content",fontSize:"highlight",fontWeight:"bold"}};basic.parameters={...basic.parameters,docs:{...basic.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...basic.parameters?.docs?.source}}},p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:'{\n  args: {\n    as: "p",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...p.parameters?.docs?.source}}},span.parameters={...span.parameters,docs:{...span.parameters?.docs,source:{originalSource:'{\n  args: {\n    as: "span",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...span.parameters?.docs?.source}}},primary.parameters={...primary.parameters,docs:{...primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "primary-textLow",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...primary.parameters?.docs?.source}}},success.parameters={...success.parameters,docs:{...success.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "success-textLow",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...success.parameters?.docs?.source}}},warning.parameters={...warning.parameters,docs:{...warning.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "warning-textLow",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...warning.parameters?.docs?.source}}},danger.parameters={...danger.parameters,docs:{...danger.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "danger-textLow",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...danger.parameters?.docs?.source}}},neutral.parameters={...neutral.parameters,docs:{...neutral.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "neutral-textLow",\n    children: "Lorem ipsum dolor sit amet"\n  }\n}',...neutral.parameters?.docs?.source}}},responsive.parameters={...responsive.parameters,docs:{...responsive.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Lorem ipsum dolor sit amet",\n    textAlign: {\n      xs: "center",\n      md: "center",\n      lg: "right",\n      xl: "center"\n    }\n  }\n}',...responsive.parameters?.docs?.source}}},lineClamp.parameters={...lineClamp.parameters,docs:{...lineClamp.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus et nisi sit amet quam convallis consectetur. Vestibulum hendrerit ac urna eget rhoncus. Aliquam non velit finibus sem gravida pretium. In neque metus, interdum a quam id, pulvinar consequat leo. Proin sapien mauris, efficitur ut mi at, finibus commodo metus. Pellentesque ac pellentesque risus. Nulla facilisi.",\n    textAlign: "left",\n    lineClamp: 1\n  }\n}',...lineClamp.parameters?.docs?.source}}},textDecoration.parameters={...textDecoration.parameters,docs:{...textDecoration.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Lorem ipsum dolor sit amet",\n    textDecoration: "line-through"\n  }\n}',...textDecoration.parameters?.docs?.source}}},aiGenerative.parameters={...aiGenerative.parameters,docs:{...aiGenerative.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "ai-generative",\n    children: "AI Generated Content",\n    fontSize: "highlight",\n    fontWeight: "bold"\n  }\n}',...aiGenerative.parameters?.docs?.source}}};const __namedExportsOrder=["basic","p","span","primary","success","warning","danger","neutral","responsive","lineClamp","textDecoration","aiGenerative"]},"./packages/react/src/atomic/Skeleton/src/Skeleton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Skeleton});__webpack_require__("./node_modules/react/index.js");var _vanilla_extract_dynamic__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@vanilla-extract/dynamic/dist/vanilla-extract-dynamic.esm.js"),_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/core/styles/src/packages/atomic/skeleton/index.ts"),_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/core/styles/src/utils/vars.css.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Skeleton=({className:_className,style:_style,height,width,borderRadius="0",...rest})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_2__.q.classnames.base,style:(0,_vanilla_extract_dynamic__WEBPACK_IMPORTED_MODULE_3__.D)({[_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_4__.width]:width,[_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_4__.height]:height,[_nimbus_ds_styles__WEBPACK_IMPORTED_MODULE_4__.borderRadius]:borderRadius}),...rest});Skeleton.displayName="Skeleton",Skeleton.displayName="Skeleton";try{Skeleton.displayName="Skeleton",Skeleton.__docgenInfo={description:"",displayName:"Skeleton",props:{width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!0,type:{name:"string"}},height:{defaultValue:null,description:"Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!0,type:{name:"string"}},borderRadius:{defaultValue:{value:"0"},description:"The border radius of the skeleton.",name:"borderRadius",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Skeleton/src/Skeleton.tsx#Skeleton"]={docgenInfo:Skeleton.__docgenInfo,name:"Skeleton",path:"packages/react/src/atomic/Skeleton/src/Skeleton.tsx#Skeleton"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/atomic/Text/src/Text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Text});__webpack_require__("./node_modules/react/index.js");var atomic_text=__webpack_require__("./packages/core/styles/src/packages/atomic/text/index.ts"),Skeleton=__webpack_require__("./packages/react/src/atomic/Skeleton/src/Skeleton.tsx");const sizes={caption:{width:"2rem",height:"1rem"},base:{width:"2rem",height:"1.25rem"},highlight:{width:"2rem",height:"1.125rem"}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TextSkeleton=({fontSize="caption",width,height,"data-testid":dataTestId})=>(0,jsx_runtime.jsx)(Skeleton.E,{width:width??sizes[fontSize].width,height:height??sizes[fontSize].height,"data-testid":dataTestId,borderRadius:"0.25rem"});TextSkeleton.displayName="TextSkeleton";try{TextSkeleton.displayName="TextSkeleton",TextSkeleton.__docgenInfo={description:"",displayName:"TextSkeleton",props:{fontSize:{defaultValue:{value:"caption"},description:"",name:"fontSize",required:!1,type:{name:"enum",value:[{value:'"caption"'},{value:'"base"'},{value:'"highlight"'}]}},width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Text/src/components/TextSkeleton/TextSkeleton.tsx#TextSkeleton"]={docgenInfo:TextSkeleton.__docgenInfo,name:"TextSkeleton",path:"packages/react/src/atomic/Text/src/components/TextSkeleton/TextSkeleton.tsx#TextSkeleton"})}catch(__react_docgen_typescript_loader_error){}const Text=({className:_className,style:_style,as:As="p",color="neutral-textLow",textAlign="left",lineHeight="base",fontWeight="regular",fontSize="base",textDecoration="none",children,lineClamp,...rest})=>{const{className,style,otherProps}=atomic_text.Q.sprinkle({...rest,color,textAlign,lineHeight,fontWeight,fontSize,textDecoration,WebkitLineClamp:lineClamp});return(0,jsx_runtime.jsx)(As,{...rest,className:[atomic_text.Q.classnames.base,lineClamp&&atomic_text.Q.classnames.trim,color in atomic_text.Q.aiColors&&atomic_text.Q.classnames.aiStyles[color],className].join(" "),style,...otherProps,children})};Text.displayName="Text",Text.Skeleton=TextSkeleton,Text.displayName="Text",Text.Skeleton.displayName="Text.Skeleton";try{Text.displayName="Text",Text.__docgenInfo={description:"",displayName:"Text",props:{children:{defaultValue:null,description:"The content of the link.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},as:{defaultValue:{value:"p"},description:"Type of html tag to create for the Text component.",name:"as",required:!1,type:{name:"enum",value:[{value:'"p"'},{value:'"span"'}]}},color:{defaultValue:{value:"neutral-textLow"},description:"The color property is used to set the color of the text.\nNote: Gradients like 'ai-generative' changes other properties like 'width' and 'display', which could make the component behave differently. Ensure to visually test the component when dynamically changing the color.",name:"color",required:!1,type:{name:'"neutral-background" | "neutral-surface" | "primary-surface" | "primary-interactive" | "primary-textLow" | "success-textLow" | "success-surface" | "warning-interactive" | ... 17 more ...'}},fontSize:{defaultValue:{value:"base"},description:"The fontSize property sets the size of the text.",name:"fontSize",required:!1,type:{name:'"caption" | "base" | "highlight" | TextConditions<"caption" | "base" | "highlight">'}},fontWeight:{defaultValue:{value:"regular"},description:"The fontWeight property sets how thick or thin characters in text should be displayed.",name:"fontWeight",required:!1,type:{name:'"regular" | "medium" | "bold" | TextConditions<"regular" | "medium" | "bold">'}},lineHeight:{defaultValue:{value:"base"},description:"The lineHeight property specifies the line height of the text.",name:"lineHeight",required:!1,type:{name:'"caption" | "base" | "highlight" | TextConditions<"caption" | "base" | "highlight">'}},textAlign:{defaultValue:{value:"left"},description:"The textAlign property specifies the horizontal alignment of text.",name:"textAlign",required:!1,type:{name:"TextAlign | TextConditions<TextAlign>"}},wordBreak:{defaultValue:null,description:"The amount of lines at which the text will be trimmed, showing an ellipsis when overflowed.",name:"wordBreak",required:!1,type:{name:"WordBreak | TextConditions<WordBreak>"}},lineClamp:{defaultValue:null,description:"The amount of lines at which the text will be trimmed, showing an ellipsis when overflowed.",name:"lineClamp",required:!1,type:{name:"number | TextConditions<number>"}},textDecoration:{defaultValue:{value:"none"},description:"The textDecoration shorthand property sets the appearance of decorative lines on text.",name:"textDecoration",required:!1,type:{name:"TextDecoration | TextConditions<TextDecoration>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Text/src/Text.tsx#Text"]={docgenInfo:Text.__docgenInfo,name:"Text",path:"packages/react/src/atomic/Text/src/Text.tsx#Text"})}catch(__react_docgen_typescript_loader_error){}}}]);