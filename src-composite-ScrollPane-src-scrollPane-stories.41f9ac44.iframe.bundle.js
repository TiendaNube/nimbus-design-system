"use strict";(self.webpackChunknimbus_design_system=self.webpackChunknimbus_design_system||[]).push([[3982],{"./packages/react/src/composite/ScrollPane/src/scrollPane.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CardLargeContent:()=>CardLargeContent,HorizontalCards:()=>HorizontalCards,ScrollableSegmentedControls:()=>ScrollableSegmentedControls,VerticalScroll:()=>VerticalScroll,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _nimbus_ds_box__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/atomic/Box/src/Box.tsx"),_nimbus_ds_card__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/react/src/composite/Card/src/Card.tsx"),_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/react/src/atomic/Text/src/Text.tsx"),_nimbus_ds_button__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./packages/react/src/atomic/Button/src/Button.tsx"),_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/react/src/atomic/IconButton/src/IconButton.tsx"),_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/icons/dist/index.js"),_nimbus_ds_segmented_control__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./packages/react/src/composite/SegmentedControl/src/SegmentedControl.tsx"),_storybook_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/utils.ts"),_ScrollPane__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/composite/ScrollPane/src/ScrollPane.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Composite/ScrollPane",component:_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G,argTypes:{showGradients:{control:{type:"boolean"},description:"Whether to show gradient overlays when content overflows",table:{category:"Component",defaultValue:{summary:"true"}}},showArrows:{control:{type:"boolean"},description:"Whether to show navigation arrows for scrolling",table:{category:"Component",defaultValue:{summary:"false"}}},showScrollbar:{control:{type:"boolean"},description:"Whether to show the scrollbar",table:{category:"Component",defaultValue:{summary:"true"}}},direction:{control:{type:"select"},options:["horizontal","vertical"],description:"The direction of the scroll",table:{category:"Component",defaultValue:{summary:"horizontal"}}},scrollToItemOnClick:{control:{type:"boolean"},description:"Whether items should scroll into view when clicked",table:{category:"Component",defaultValue:{summary:"true"}}},children:{control:{disable:!0},table:{category:"Component"}},...(0,_storybook_utils__WEBPACK_IMPORTED_MODULE_1__._u)()},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_box__WEBPACK_IMPORTED_MODULE_4__.a,{padding:"4",maxWidth:"450px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Story,{})})],tags:["autodocs"]},HorizontalCards={args:{showGradients:!0,showArrows:!0,showScrollbar:!0,direction:"horizontal",scrollToItemOnClick:!0,scrollPaneArrowStart:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowHorizontalStart,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowLeftIcon,{})})}),scrollPaneArrowEnd:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowHorizontalEnd,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowRightIcon,{})})})},argTypes:{scrollPaneArrowStart:{control:{disable:!0}},scrollPaneArrowEnd:{control:{disable:!0}},direction:{control:{disable:!0}}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G,{...args,children:Array.from({length:10},((_,i)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.Item,{padding:"2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_nimbus_ds_card__WEBPACK_IMPORTED_MODULE_7__.Z,{padding:"base",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{fontSize:"base",fontWeight:"bold",children:["Card ",i+1]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{fontSize:"caption",color:"neutral-textLow",children:"This is a sample card with some content that demonstrates the scroll functionality."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_button__WEBPACK_IMPORTED_MODULE_9__.$,{children:"Action"})]})},i)))})},ScrollableSegmentedControls={args:{showGradients:!0,showArrows:!1,showScrollbar:!1,direction:"horizontal",scrollPaneArrowStart:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowHorizontalStart,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowLeftIcon,{})})}),scrollPaneArrowEnd:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowHorizontalEnd,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowRightIcon,{})})})},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_box__WEBPACK_IMPORTED_MODULE_4__.a,{display:"flex",flexDirection:"column",gap:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G,{...args,display:"grid",contentContainerProps:{flexShrink:"0"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_segmented_control__WEBPACK_IMPORTED_MODULE_10__.I,{children:Array.from({length:10},((_,i)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.Item,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_nimbus_ds_segmented_control__WEBPACK_IMPORTED_MODULE_10__.I.Button,{label:`Button ${i+1}`,id:`Button ${i+1}`,children:["Button ",i+1]})},i)))})})})},VerticalScroll={args:{showGradients:!0,showArrows:!0,showScrollbar:!0,direction:"vertical",scrollPaneArrowStart:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowVerticalStart,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ChevronUpIcon,{})})}),scrollPaneArrowEnd:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.ArrowVerticalEnd,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icon_button__WEBPACK_IMPORTED_MODULE_5__.K,{source:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_icons__WEBPACK_IMPORTED_MODULE_6__.ChevronDownIcon,{})})})},argTypes:{scrollPaneArrowStart:{control:{disable:!0}},scrollPaneArrowEnd:{control:{disable:!0}},direction:{control:{disable:!0}}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G,{...args,display:"flex",flexDirection:"column",maxHeight:"200px",children:Array.from({length:8},((_,i)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.Item,{padding:"2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_nimbus_ds_card__WEBPACK_IMPORTED_MODULE_7__.Z,{padding:"base",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{fontWeight:"bold",children:["Notification ",i+1]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{fontSize:"caption",color:"neutral-textLow",children:"This is a sample notification message that shows how vertical scrolling works in the ScrollPane component."})]})},i)))})},CardLargeContent={args:{showGradients:!0,showArrows:!1,showScrollbar:!1,direction:"vertical"},argTypes:{scrollPaneArrowStart:{control:{disable:!0}},scrollPaneArrowEnd:{control:{disable:!0}},direction:{control:{disable:!0}},showArrows:{control:{disable:!0}}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_card__WEBPACK_IMPORTED_MODULE_7__.Z,{padding:"base",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G,{...args,scrollToItemOnClick:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_ScrollPane__WEBPACK_IMPORTED_MODULE_3__.G.Item,{padding:"4",height:"200px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{fontWeight:"bold",children:"Large Content Example"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{children:"This is an example of how the ScrollPane component can handle large content that needs to be scrolled. The component automatically detects when content overflows and shows the appropriate visual indicators."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{children:"You can scroll through this content using the scrollbar, mouse wheel, touch gestures on mobile, or the navigation arrows if they are enabled."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{children:"The gradient overlays provide a visual cue that there is more content available beyond the visible area. This helps users understand that they can scroll to see additional content."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_nimbus_ds_text__WEBPACK_IMPORTED_MODULE_8__.E,{children:"The ScrollPane component is fully responsive and works well on both desktop and mobile devices, adapting its behavior and visual elements based on the available space and user interaction capabilities."})]})})})};HorizontalCards.parameters={...HorizontalCards.parameters,docs:{...HorizontalCards.parameters?.docs,source:{originalSource:'{\n  args: {\n    showGradients: true,\n    showArrows: true,\n    showScrollbar: true,\n    direction: "horizontal",\n    scrollToItemOnClick: true,\n    scrollPaneArrowStart: <ScrollPane.ArrowHorizontalStart>\n        <IconButton source={<ArrowLeftIcon />} />\n      </ScrollPane.ArrowHorizontalStart>,\n    scrollPaneArrowEnd: <ScrollPane.ArrowHorizontalEnd>\n        <IconButton source={<ArrowRightIcon />} />\n      </ScrollPane.ArrowHorizontalEnd>\n  },\n  argTypes: {\n    scrollPaneArrowStart: {\n      control: {\n        disable: true\n      }\n    },\n    scrollPaneArrowEnd: {\n      control: {\n        disable: true\n      }\n    },\n    direction: {\n      control: {\n        disable: true\n      }\n    }\n  },\n  render: args => <ScrollPane {...args}>\n      {Array.from({\n      length: 10\n    }, (_, i) => <ScrollPane.Item key={i} padding="2">\n          <Card padding="base">\n            <Text fontSize="base" fontWeight="bold">\n              Card {i + 1}\n            </Text>\n            <Text fontSize="caption" color="neutral-textLow">\n              This is a sample card with some content that demonstrates the\n              scroll functionality.\n            </Text>\n            <Button>Action</Button>\n          </Card>\n        </ScrollPane.Item>)}\n    </ScrollPane>\n}',...HorizontalCards.parameters?.docs?.source}}},ScrollableSegmentedControls.parameters={...ScrollableSegmentedControls.parameters,docs:{...ScrollableSegmentedControls.parameters?.docs,source:{originalSource:'{\n  args: {\n    showGradients: true,\n    showArrows: false,\n    showScrollbar: false,\n    direction: "horizontal",\n    scrollPaneArrowStart: <ScrollPane.ArrowHorizontalStart>\n        <IconButton source={<ArrowLeftIcon />} />\n      </ScrollPane.ArrowHorizontalStart>,\n    scrollPaneArrowEnd: <ScrollPane.ArrowHorizontalEnd>\n        <IconButton source={<ArrowRightIcon />} />\n      </ScrollPane.ArrowHorizontalEnd>\n  },\n  render: args => <Box display="flex" flexDirection="column" gap="3">\n      <ScrollPane {...args} display="grid" contentContainerProps={{\n      flexShrink: "0"\n    }}>\n        <SegmentedControl>\n          {Array.from({\n          length: 10\n        }, (_, i) => <ScrollPane.Item key={i}>\n              <SegmentedControl.Button label={`Button ${i + 1}`} id={`Button ${i + 1}`}>\n                Button {i + 1}\n              </SegmentedControl.Button>\n            </ScrollPane.Item>)}\n        </SegmentedControl>\n      </ScrollPane>\n    </Box>\n}',...ScrollableSegmentedControls.parameters?.docs?.source}}},VerticalScroll.parameters={...VerticalScroll.parameters,docs:{...VerticalScroll.parameters?.docs,source:{originalSource:'{\n  args: {\n    showGradients: true,\n    showArrows: true,\n    showScrollbar: true,\n    direction: "vertical",\n    scrollPaneArrowStart: <ScrollPane.ArrowVerticalStart>\n        <IconButton source={<ChevronUpIcon />} />\n      </ScrollPane.ArrowVerticalStart>,\n    scrollPaneArrowEnd: <ScrollPane.ArrowVerticalEnd>\n        <IconButton source={<ChevronDownIcon />} />\n      </ScrollPane.ArrowVerticalEnd>\n  },\n  argTypes: {\n    scrollPaneArrowStart: {\n      control: {\n        disable: true\n      }\n    },\n    scrollPaneArrowEnd: {\n      control: {\n        disable: true\n      }\n    },\n    direction: {\n      control: {\n        disable: true\n      }\n    }\n  },\n  render: args => <ScrollPane {...args} display="flex" flexDirection="column" maxHeight="200px">\n      {Array.from({\n      length: 8\n    }, (_, i) => <ScrollPane.Item key={i} padding="2">\n          <Card padding="base">\n            <Text fontWeight="bold">Notification {i + 1}</Text>\n            <Text fontSize="caption" color="neutral-textLow">\n              This is a sample notification message that shows how vertical\n              scrolling works in the ScrollPane component.\n            </Text>\n          </Card>\n        </ScrollPane.Item>)}\n    </ScrollPane>\n}',...VerticalScroll.parameters?.docs?.source}}},CardLargeContent.parameters={...CardLargeContent.parameters,docs:{...CardLargeContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    showGradients: true,\n    showArrows: false,\n    showScrollbar: false,\n    direction: "vertical"\n  },\n  argTypes: {\n    scrollPaneArrowStart: {\n      control: {\n        disable: true\n      }\n    },\n    scrollPaneArrowEnd: {\n      control: {\n        disable: true\n      }\n    },\n    direction: {\n      control: {\n        disable: true\n      }\n    },\n    showArrows: {\n      control: {\n        disable: true\n      }\n    }\n  },\n  render: args => <Card padding="base">\n      <ScrollPane {...args} scrollToItemOnClick={false}>\n        <ScrollPane.Item padding="4" height="200px">\n          <Text fontWeight="bold">Large Content Example</Text>\n          <Text>\n            This is an example of how the ScrollPane component can handle large\n            content that needs to be scrolled. The component automatically\n            detects when content overflows and shows the appropriate visual\n            indicators.\n          </Text>\n          <Text>\n            You can scroll through this content using the scrollbar, mouse\n            wheel, touch gestures on mobile, or the navigation arrows if they\n            are enabled.\n          </Text>\n          <Text>\n            The gradient overlays provide a visual cue that there is more\n            content available beyond the visible area. This helps users\n            understand that they can scroll to see additional content.\n          </Text>\n          <Text>\n            The ScrollPane component is fully responsive and works well on both\n            desktop and mobile devices, adapting its behavior and visual\n            elements based on the available space and user interaction\n            capabilities.\n          </Text>\n        </ScrollPane.Item>\n      </ScrollPane>\n    </Card>\n}',...CardLargeContent.parameters?.docs?.source}}};const __namedExportsOrder=["HorizontalCards","ScrollableSegmentedControls","VerticalScroll","CardLargeContent"]},"./packages/react/src/atomic/Button/src/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/core/typings/src/index.ts"),atomic_button=__webpack_require__("./packages/core/styles/src/packages/atomic/button/index.ts"),Skeleton=__webpack_require__("./packages/react/src/atomic/Skeleton/src/Skeleton.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ButtonSkeleton=({width,"data-testid":dataTestId})=>(0,jsx_runtime.jsx)(Skeleton.E,{width:width??"4.75rem",height:"2rem",borderRadius:"0.5rem","data-testid":dataTestId});ButtonSkeleton.displayName="ButtonSkeleton";try{ButtonSkeleton.displayName="ButtonSkeleton",ButtonSkeleton.__docgenInfo={description:"",displayName:"ButtonSkeleton",props:{width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Button/src/components/ButtonSkeleton/ButtonSkeleton.tsx#ButtonSkeleton"]={docgenInfo:ButtonSkeleton.__docgenInfo,name:"ButtonSkeleton",path:"packages/react/src/atomic/Button/src/components/ButtonSkeleton/ButtonSkeleton.tsx#ButtonSkeleton"})}catch(__react_docgen_typescript_loader_error){}const Button=(0,react.forwardRef)((({className:_className,style:_style,as:As="button",children,...props},ref)=>{const{appearance="neutral",fullWidth=!1,size="medium",...rest}=props,innerRef=(0,react.useRef)(null);(0,src.T)(ref,innerRef),(0,react.useImperativeHandle)(ref,(()=>innerRef?.current)),(0,react.useEffect)((()=>{!innerRef.current||innerRef.current instanceof HTMLAnchorElement||innerRef.current instanceof HTMLButtonElement||console.error("Error: Found `Button` component that renders an inaccessible element",innerRef.current,"Please ensure `Button` always renders as <a> or <button>")}),[innerRef]);const buttonClasses=[atomic_button.x.classnames.appearance[appearance],atomic_button.x.classnames.size[size],fullWidth&&atomic_button.x.classnames.fullWidth].filter(Boolean).join(" ");return(0,jsx_runtime.jsx)(As,{...rest,className:buttonClasses,ref:innerRef,children})}));Button.Skeleton=ButtonSkeleton,Button.displayName="Button",Button.Skeleton.displayName="Button.Skeleton";try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "slot" | "style" | "title" | ComponentClass<unknown, any> | FunctionComponent<unknown> | "article" | "button" | "dialog" | "figure" | ... 168 more ... | "view"'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Button/src/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"packages/react/src/atomic/Button/src/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/atomic/Icon/src/Icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>Icon});var react=__webpack_require__("./node_modules/react/index.js"),icon=__webpack_require__("./packages/core/styles/src/packages/atomic/icon/index.ts"),Skeleton=__webpack_require__("./packages/react/src/atomic/Skeleton/src/Skeleton.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const IconSkeleton=({width,height,"data-testid":dataTestId})=>(0,jsx_runtime.jsx)(Skeleton.E,{width:width??"1rem",height:height??"1rem",borderRadius:"0.25rem","data-testid":dataTestId});IconSkeleton.displayName="IconSkeleton";try{IconSkeleton.displayName="IconSkeleton",IconSkeleton.__docgenInfo={description:"",displayName:"IconSkeleton",props:{width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Icon/src/components/IconSkeleton/IconSkeleton.tsx#IconSkeleton"]={docgenInfo:IconSkeleton.__docgenInfo,name:"IconSkeleton",path:"packages/react/src/atomic/Icon/src/components/IconSkeleton/IconSkeleton.tsx#IconSkeleton"})}catch(__react_docgen_typescript_loader_error){}const GRADIENT_COLORS=new Set(["ai-generative"]),canUseGradient=color=>(color=>Boolean(color&&"none"!==color&&"transparent"!==color))(color)&&!color.startsWith("url("),GRADIENT_PROPERTIES=["fill","stroke"],injectGradientDefs=(svg,gradientDef)=>{const newChildren=[react.createElement("defs",{key:"gradient-defs"},gradientDef),...react.Children.toArray(svg.props.children||[])];return react.cloneElement(svg,{...svg.props,children:newChildren})},processElement=(element,gradientId)=>{if(!react.isValidElement(element))return element;const props=element.props,processedChildren=react.Children.map(props.children,(child=>react.isValidElement(child)?processElement(child,gradientId):child)),newProps={...props};return GRADIENT_PROPERTIES.forEach((property=>{const value=props[property];value&&(canUseGradient(value)||"currentColor"===value)&&(newProps[property]=`url(#${gradientId})`)})),newProps.children=processedChildren,react.cloneElement(element,newProps)};var gradients=__webpack_require__("./packages/core/styles/src/gradients/gradients.ts");const createSvgGradientDef=(gradientId,gradient,direction="horizontal")=>{const gradientStops="linear"===(type=gradient)?(cssGradient=>{const match=/linear-gradient\([^,]+,\s*(.+)\)/.exec(cssGradient);if(!match)return[];const colorStopsString=match[1],stops=[],colorStops=colorStopsString.split(/,(?![^()]*\))/);return colorStops.forEach((stop=>{const trimmedStop=stop.trim(),stopMatch=/^(.+)\s+(\d+(?:\.\d+)?%)$/.exec(trimmedStop);if(stopMatch)stops.push({color:stopMatch[1].trim(),offset:stopMatch[2]});else{const index=colorStops.indexOf(stop),percentage=1===colorStops.length?"100%":index/(colorStops.length-1)*100+"%";stops.push({color:trimmedStop,offset:percentage})}})),stops})(gradients.aiGenerativeInteractive):(console.warn(`Unsupported gradient type: ${type}`),[]);var type;const gradientProps="horizontal"===direction?{x1:"0%",y1:"0%",x2:"100%",y2:"0%"}:{x1:"0%",y1:"0%",x2:"0%",y2:"100%"};return react.createElement("linearGradient",{id:gradientId,gradientUnits:"objectBoundingBox",...gradientProps},...gradientStops.map(((stop,index)=>react.createElement("stop",{key:`${gradientId}-stop-${index}`,offset:stop.offset,stopColor:stop.color}))))},applyGradientToSvg=(svgSource,gradientType="linear")=>{if(!react.isValidElement(svgSource))return svgSource;const gradientId=`nimbus-gradient-${Math.random().toString(36).slice(2,11)}`,gradientDef=createSvgGradientDef(gradientId,gradientType);if("function"==typeof svgSource.type)try{const renderedSvg=(0,svgSource.type)(svgSource.props);if(!react.isValidElement(renderedSvg))return svgSource;const processedSvg=processElement(renderedSvg,gradientId);return injectGradientDefs(processedSvg,gradientDef)}catch(error){return console.warn("Failed to render SVG component for gradient application:",error),svgSource}const processedSvg=processElement(svgSource,gradientId);return injectGradientDefs(processedSvg,gradientDef)},Icon=({className:_className,style:_style,color="neutral-textLow",cursor="inherit",source,...rest})=>{const renderGradient=(0,react.useMemo)((()=>(color=>GRADIENT_COLORS.has(color))(color)),[color]),processedSource=(0,react.useMemo)((()=>renderGradient?applyGradientToSvg(source):source),[renderGradient,source]);return(0,jsx_runtime.jsx)("div",{...rest,className:[icon.K.sprinkle({...!renderGradient&&{color},cursor}),icon.K.classnames.base].join(" "),children:processedSource})};Icon.displayName="Icon",Icon.Skeleton=IconSkeleton,Icon.displayName="Icon",Icon.Skeleton.displayName="Icon.Skeleton";try{Icon.displayName="Icon",Icon.__docgenInfo={description:"",displayName:"Icon",props:{source:{defaultValue:null,description:"The SVG contents to display in the Icon.\n@TJS-type React.ReactNode",name:"source",required:!0,type:{name:"ReactNode"}},color:{defaultValue:{value:"neutral-textLow"},description:'Set the color for the SVG fill.\nUse "ai-generative" to apply the Nimbus AI generative gradient.',name:"color",required:!1,type:{name:"enum",value:[{value:'"neutral-background"'},{value:'"neutral-surface"'},{value:'"primary-surface"'},{value:'"primary-interactive"'},{value:'"primary-textLow"'},{value:'"success-textLow"'},{value:'"success-surface"'},{value:'"warning-interactive"'},{value:'"warning-surface"'},{value:'"warning-textLow"'},{value:'"danger-interactive"'},{value:'"danger-surface"'},{value:'"danger-textLow"'},{value:'"neutral-interactive"'},{value:'"neutral-textLow"'},{value:'"currentColor"'},{value:'"success-interactive"'},{value:'"primary-textHigh"'},{value:'"success-textHigh"'},{value:'"warning-textHigh"'},{value:'"danger-textHigh"'},{value:'"neutral-textHigh"'},{value:'"ai-generative"'},{value:'"neutral-textDisabled"'}]}},cursor:{defaultValue:{value:"inherit"},description:"The cursor property specifies the mouse cursor to be displayed when pointing over an element.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'},{value:'"pointer"'},{value:'"not-allowed"'},{value:'"grab"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Icon/src/Icon.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"packages/react/src/atomic/Icon/src/Icon.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/atomic/IconButton/src/IconButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>IconButton});__webpack_require__("./node_modules/react/index.js");var iconButton=__webpack_require__("./packages/core/styles/src/packages/atomic/iconButton/index.ts"),Icon=__webpack_require__("./packages/react/src/atomic/Icon/src/Icon.tsx"),Skeleton=__webpack_require__("./packages/react/src/atomic/Skeleton/src/Skeleton.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const IconButtonSkeleton=({width,height,"data-testid":dataTestId})=>(0,jsx_runtime.jsx)(Skeleton.E,{width:width??"2.75rem",height:height??"2.75rem",borderRadius:"100%","data-testid":dataTestId});IconButtonSkeleton.displayName="IconButtonSkeleton";try{IconButtonSkeleton.displayName="IconButtonSkeleton",IconButtonSkeleton.__docgenInfo={description:"",displayName:"IconButtonSkeleton",props:{width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/IconButton/src/components/IconButtonSkeleton/IconButtonSkeleton.tsx#IconButtonSkeleton"]={docgenInfo:IconButtonSkeleton.__docgenInfo,name:"IconButtonSkeleton",path:"packages/react/src/atomic/IconButton/src/components/IconButtonSkeleton/IconButtonSkeleton.tsx#IconButtonSkeleton"})}catch(__react_docgen_typescript_loader_error){}const IconButton=({className:_className,style:_style,as:As="button",size="2.75rem",backgroundColor={xs:"neutral-surface",active:"neutral-interactive",hover:"neutral-surfaceHighlight"},borderColor={xs:"neutral-interactive",active:"neutral-interactivePressed",hover:"neutral-interactiveHover",focus:"primary-interactive"},color="neutral-textHigh",appearance,source,...rest})=>{const sprinkleProps={size,..."ai-generative"!==appearance&&{borderColor,backgroundColor}},{className,style,otherProps}=iconButton.g.sprinkle({...rest,...sprinkleProps});return(0,jsx_runtime.jsx)(As,{className:[className,appearance?iconButton.g.classnames.appearance?.[appearance]:iconButton.g.classnames.base].filter(Boolean).join(" "),style,...otherProps,children:(0,jsx_runtime.jsx)(Icon.I,{"data-testid":"icon-element",color,cursor:"pointer",source})})};IconButton.displayName="IconButton",IconButton.Skeleton=IconButtonSkeleton,IconButton.displayName="IconButton",IconButton.Skeleton.displayName="IconButton.Skeleton";try{IconButton.displayName="IconButton",IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{as:{defaultValue:{value:"button"},description:"Type of html tag to create for the Icon Button component.",name:"as",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"div"'}]}},source:{defaultValue:null,description:"The SVG contents to display in the Icon button.\n@TJS-type React.ReactNode",name:"source",required:!0,type:{name:"ReactNode"}},color:{defaultValue:{value:"neutral-textHigh"},description:"Set the color for the inner Icon fill.",name:"color",required:!1,type:{name:"enum",value:[{value:'"neutral-background"'},{value:'"neutral-surface"'},{value:'"primary-surface"'},{value:'"primary-interactive"'},{value:'"primary-textLow"'},{value:'"success-textLow"'},{value:'"success-surface"'},{value:'"warning-interactive"'},{value:'"warning-surface"'},{value:'"warning-textLow"'},{value:'"danger-interactive"'},{value:'"danger-surface"'},{value:'"danger-textLow"'},{value:'"neutral-interactive"'},{value:'"neutral-textLow"'},{value:'"currentColor"'},{value:'"success-interactive"'},{value:'"primary-textHigh"'},{value:'"success-textHigh"'},{value:'"warning-textHigh"'},{value:'"danger-textHigh"'},{value:'"neutral-textHigh"'},{value:'"ai-generative"'},{value:'"neutral-textDisabled"'}]}},appearance:{defaultValue:null,description:"AI gradient background appearance for the button container.\nWhen provided, container color/border sprinkles are ignored in favor of gradient styles.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"ai-generative"'}]}},size:{defaultValue:{value:"2.75rem"},description:"The size of the component.",name:"size",required:!1,type:{name:"string | IconButtonConditions<string>"}},borderColor:{defaultValue:{value:'{\n    xs: "neutral-interactive",\n    active: "neutral-interactivePressed",\n    hover: "neutral-interactiveHover",\n    focus: "primary-interactive",\n  }'},description:"The borderColor property sets the color of the icon button's four borders.",name:"borderColor",required:!1,type:{name:'"transparent" | "neutral-surface" | "neutral-surfaceHighlight" | "primary-interactive" | "neutral-interactive" | "ai-generativeSurface" | "neutral-interactiveHover" | "neutral-interactivePressed" | IconButtonConditions<...>'}},backgroundColor:{defaultValue:{value:'{\n    xs: "neutral-surface",\n    active: "neutral-interactive",\n    hover: "neutral-surfaceHighlight",\n  }'},description:"The backgroundColor property sets the background color of the icon button.",name:"backgroundColor",required:!1,type:{name:'"transparent" | "neutral-surface" | "neutral-surfaceHighlight" | "neutral-interactive" | "ai-generativeSurface" | IconButtonConditions<"transparent" | "neutral-surface" | "neutral-surfaceHighlight" | "neutral-interactive" | "ai-generativeSurface">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/IconButton/src/IconButton.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"packages/react/src/atomic/IconButton/src/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/atomic/Title/src/Title.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>Title});__webpack_require__("./node_modules/react/index.js");var title=__webpack_require__("./packages/core/styles/src/packages/atomic/title/index.ts"),Skeleton=__webpack_require__("./packages/react/src/atomic/Skeleton/src/Skeleton.tsx");const sizes={h1:{width:"8.25rem",height:"2.75rem"},h2:{width:"6.188rem",height:"1.75rem"},h3:{width:"5.188rem",height:"1.75rem"},h4:{width:"4.625rem",height:"1.5rem"},h5:{width:"4.125rem",height:"1.25rem"},h6:{width:"3.625rem",height:"1.125rem"}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TitleSkeleton=({as="h1",width,height,"data-testid":dataTestId})=>(0,jsx_runtime.jsx)(Skeleton.E,{width:width??sizes[as].width,height:height??sizes[as].height,"data-testid":dataTestId,borderRadius:"0.25rem"});TitleSkeleton.displayName="TitleSkeleton";try{TitleSkeleton.displayName="TitleSkeleton",TitleSkeleton.__docgenInfo={description:"",displayName:"TitleSkeleton",props:{as:{defaultValue:{value:"h1"},description:"Type of html tag to create for the title.",name:"as",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'}]}},width:{defaultValue:null,description:"Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"This is an attribute used to identify a DOM node for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Title/src/components/TitleSkeleton/TitleSkeleton.tsx#TitleSkeleton"]={docgenInfo:TitleSkeleton.__docgenInfo,name:"TitleSkeleton",path:"packages/react/src/atomic/Title/src/components/TitleSkeleton/TitleSkeleton.tsx#TitleSkeleton"})}catch(__react_docgen_typescript_loader_error){}const Title=({className:_className,style:_style,as:As="h1",color="neutral-textHigh",textAlign="left",lineHeight,fontWeight="bold",fontSize,children,...rest})=>(0,jsx_runtime.jsx)(As,{...rest,className:[title.D.sprinkle({color,textAlign,lineHeight,fontWeight,fontSize}),title.D.classnames.appearance[As]].join(" "),children});Title.displayName="Title",Title.displayName="Title",Title.Skeleton=TitleSkeleton,Title.Skeleton.displayName="Title.Skeleton";try{Title.displayName="Title",Title.__docgenInfo={description:"",displayName:"Title",props:{children:{defaultValue:null,description:"The content of the title.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},as:{defaultValue:{value:"h1"},description:"Type of html tag to create for the title.",name:"as",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'}]}},fontSize:{defaultValue:{value:"base"},description:"The fontSize property sets the size of the title.",name:"fontSize",required:!1,type:{name:'"h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | TitleConditions<"h1" | ... 25 more ... | "20">'}},fontWeight:{defaultValue:{value:"bold"},description:"The fontWeight property sets how thick or thin characters in title should be displayed.",name:"fontWeight",required:!1,type:{name:'"regular" | "medium" | "bold" | TitleConditions<"regular" | "medium" | "bold">'}},lineHeight:{defaultValue:{value:"base"},description:"The lineHeight property specifies the line height of the title.",name:"lineHeight",required:!1,type:{name:'"h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | TitleConditions<"h1" | ... 25 more ... | "20">'}},textAlign:{defaultValue:{value:"left"},description:"The textAlign property specifies the horizontal alignment of title.",name:"textAlign",required:!1,type:{name:"TextAlign | TitleConditions<TextAlign>"}},color:{defaultValue:{value:"neutral-textHigh"},description:"The color property is used to set the color of the title.",name:"color",required:!1,type:{name:'"neutral-background" | "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | (TitleConditions<...> & string)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/atomic/Title/src/Title.tsx#Title"]={docgenInfo:Title.__docgenInfo,name:"Title",path:"packages/react/src/atomic/Title/src/Title.tsx#Title"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/composite/Card/src/Card.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Card});__webpack_require__("./node_modules/react/index.js");var card=__webpack_require__("./packages/core/styles/src/packages/composite/card/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CardBody=({className:_className,style:_style,padding="none",children,...rest})=>(0,jsx_runtime.jsx)("div",{className:card.N.subComponents.body.sprinkle({padding}),...rest,children});CardBody.displayName="CardBody";try{CardBody.displayName="CardBody",CardBody.__docgenInfo={description:"",displayName:"CardBody",props:{children:{defaultValue:null,description:"The content of the card body.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},padding:{defaultValue:{value:"none"},description:"The padding properties are used to generate space around an card's body content area.",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"base"'},{value:'"small"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/composite/Card/src/components/CardBody/CardBody.tsx#CardBody"]={docgenInfo:CardBody.__docgenInfo,name:"CardBody",path:"packages/react/src/composite/Card/src/components/CardBody/CardBody.tsx#CardBody"})}catch(__react_docgen_typescript_loader_error){}const CardFooter=({className:_className,style:_style,padding="none",children,...rest})=>(0,jsx_runtime.jsx)("div",{className:[card.N.classnames.container__footer,card.N.subComponents.footer.sprinkle({padding})].join(" "),...rest,children});CardFooter.displayName="CardFooter";try{CardFooter.displayName="CardFooter",CardFooter.__docgenInfo={description:"",displayName:"CardFooter",props:{children:{defaultValue:null,description:"The content of the card footer.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},padding:{defaultValue:{value:"none"},description:"The padding properties are used to generate space around an card's footer content area.",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"base"'},{value:'"small"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/composite/Card/src/components/CardFooter/CardFooter.tsx#CardFooter"]={docgenInfo:CardFooter.__docgenInfo,name:"CardFooter",path:"packages/react/src/composite/Card/src/components/CardFooter/CardFooter.tsx#CardFooter"})}catch(__react_docgen_typescript_loader_error){}var Title=__webpack_require__("./packages/react/src/atomic/Title/src/Title.tsx");const CardHeader=({className:_className,style:_style,padding="none",title,children,...rest})=>(0,jsx_runtime.jsxs)("div",{className:card.N.subComponents.header.sprinkle({padding}),...rest,children:[title&&(0,jsx_runtime.jsx)(Title.h,{"data-testid":"header-title",as:"h4",children:title}),children]});CardHeader.displayName="CardHeader";try{CardHeader.displayName="CardHeader",CardHeader.__docgenInfo={description:"",displayName:"CardHeader",props:{children:{defaultValue:null,description:"The content of the card header.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"The title to display in the card header.",name:"title",required:!1,type:{name:"string"}},padding:{defaultValue:{value:"none"},description:"The padding properties are used to generate space around an card's header content area.",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"base"'},{value:'"small"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/composite/Card/src/components/CardHeader/CardHeader.tsx#CardHeader"]={docgenInfo:CardHeader.__docgenInfo,name:"CardHeader",path:"packages/react/src/composite/Card/src/components/CardHeader/CardHeader.tsx#CardHeader"})}catch(__react_docgen_typescript_loader_error){}const Card=({className:_className,style:_style,children,padding="base",backgroundColor="neutral-background",...rest})=>(0,jsx_runtime.jsx)("div",{className:[card.N.classnames.container,card.N.sprinkle({padding,backgroundColor})].join(" "),...rest,children});Card.displayName="Card",Card.Body=CardBody,Card.Footer=CardFooter,Card.Header=CardHeader,Card.displayName="Card",Card.Body.displayName="Card.Body",Card.Footer.displayName="Card.Footer",Card.Header.displayName="Card.Header";try{Card.displayName="Card",Card.__docgenInfo={description:"",displayName:"Card",props:{children:{defaultValue:null,description:"The content of the card.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},padding:{defaultValue:{value:"base"},description:"The padding properties are used to generate space around an card's content area.",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"base"'},{value:'"small"'}]}},backgroundColor:{defaultValue:{value:"neutral-background"},description:"The backgroundColor property sets the background color of the card.",name:"backgroundColor",required:!1,type:{name:"enum",value:[{value:'"neutral-background"'},{value:'"neutral-surface"'},{value:'"neutral-surfaceHighlight"'},{value:'"primary-surface"'},{value:'"primary-surfaceHighlight"'},{value:'"success-surface"'},{value:'"success-surfaceHighlight"'},{value:'"warning-surface"'},{value:'"warning-surfaceHighlight"'},{value:'"danger-surface"'},{value:'"danger-surfaceHighlight"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/composite/Card/src/Card.tsx#Card"]={docgenInfo:Card.__docgenInfo,name:"Card",path:"packages/react/src/composite/Card/src/Card.tsx#Card"})}catch(__react_docgen_typescript_loader_error){}}}]);